services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      # This volume persists the Postgres data
      - ./.postgres_data:/var/lib/postgresql/data

      # Place your schema file(s) here so Postgres runs them on container initialization.
      # All SQL files inside /docker-entrypoint-initdb.d run exactly once if no database is initialized.
      - ./initdb:/docker-entrypoint-initdb.d

    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Example Airflow container, or you can remove it if you only need Postgres.
  airflow:
    image: apache/airflow:2.5.1
    container_name: airflow
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      # Using the new [database] config key:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: "REPLACE_ME_WITH_A_REAL_FERNET_KEY"
      AIRFLOW__WEBSERVER__SECRET_KEY: "some_random_secret_key_for_sessions"
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    volumes:
      - ./dags:/opt/airflow/dags
    ports:
      - "8080:8080"
    command: >
      bash -c "
        echo 'Waiting for Postgres to be ready...' &&
        while ! pg_isready -h postgres -p 5432 -U airflow; do
          sleep 1
        done &&
        echo 'Postgres is up! Starting Airflow...' &&
        airflow db init &&
        airflow users create
          --username admin
          --password admin
          --firstname Admin
          --lastname User
          --role Admin
          --email admin@example.com &&
        airflow scheduler &
        airflow webserver
      "
